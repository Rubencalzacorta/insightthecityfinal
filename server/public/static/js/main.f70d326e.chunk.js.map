{"version":3,"sources":["services/auth.services.js","components/pages/Home/Home.js","components/pages/auth/login/login.js","components/pages/auth/signup/signup.js","services/files.services.js","services/user.services.js","components/UI/Profile/ProfileEditForm.js","components/UI/Profile/ProfileSummary.js","components/UI/Profile/JobExperienceSection.js","components/UI/Profile/MapListItem.js","services/maps.services.js","components/UI/Profile/MapsList.js","components/UI/Profile/ProjectList.js","components/pages/Profile/Profile.js","components/UI/NavBar/NavBar.js","components/UI/maps/Map.js","services/google.services.js","components/UI/FilterBar/FilterBar.js","services/notes.services.js","components/UI/Notes/SingleNote.js","components/UI/Notes/NotesBar.js","components/pages/Maps/MapPage.js","components/pages/Maps/MapPageId.js","services/project.services.js","components/UI/Projects/NewProjectForm.js","components/UI/Projects/ProjectEditForm.js","components/UI/Projects/ProjectInfoBox.js","components/UI/Projects/TeamMemberSummary.js","components/pages/Projects/Project.js","App.js","index.js"],"names":["authServices","signup","username","password","service","post","then","response","data","login","logout","loggedin","get","this","axios","create","baseURL","process","withCredentials","Signup","props","state","Component","Login","handleChange","e","target","name","value","setState","postUser","AuthServices","theLoggedUser","setTheUser","history","push","catch","err","console","log","handleSubmit","preventDefault","Container","Form","onSubmit","Group","Label","Control","type","onChange","Button","variant","theLoggedNewUser","Services","handleUpload","theFile","getUser","id","user","addMap","map","addProject","ProfileEditForm","finishAction","closeModal","UserServices","handleFileUpload","uploadData","FormData","append","files","FilesServices","secure_url","imageUrl","loggedInUser","lastName","email","description","experienceOverview","company","role","startDate","endDate","jobDescription","Text","className","ProfileSummary","userDetails","maps","projects","organizations","Col","md","Card","Img","src","Body","Title","length","JobExperienceSection","MapListItem","item","created_at","googleKWords","demografic","mapServices","postMap","getMap","mapId","updateMap","addNotes","objectToUpdate","MapsTable","MapServices","list","Table","striped","bordered","hover","elm","idx","to","_id","key","ProjectList","Profile","componentDidMount","match","params","theUser","showMaps","showList","showProjects","showModal","openModal","Row","onClick","Modal","show","onHide","Navigation","greeting","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","mapboxgl","accessToken","Map","mergedata","i","features","y","demografics","properties","code","sendFilters","postFilters","lng","lat","zoom","container","mapContainer","style","center","on","getCenter","toFixed","getZoom","addSource","addLayer","source","paint","ref","el","GoogleServices","getPlaces","keyword","error","MapFilterBar","initialState","keywords","searchPlaces","placeholder","postNote","note","SingleNote","eachNote","text","notesBar","creator","NotesServices","newNote","MapsServices","noteId","updatedMap","resetNote","document","querySelector","submitNote","required","notes","MapPage","filters","newMap","addedMap","undefined","NotesBar","MapPageId","theMap","updated","ProjectServices","createProject","project","getProject","addTeamMember","projectId","memberId","updateProject","ProjectEditForm","updatedProject","updateState","proposal","opportunity","ProjectInfoBox","title","content","Project","theProject","showTeamModal","team","TeamMemberSummary","closeTeamModal","App","fetchUser","exact","path","render","Home","NewProjectForm","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.f70d326e.chunk.js","sourcesContent":["import axios from \"axios\"\n\nclass authServices {\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/auth`,\n            withCredentials: true\n        })\n\n    }\n\n    signup = ({ username, password }) => this.service.post(\"/signup\", { username, password }).then(response => response.data)\n    login = ({ username, password }) => this.service.post(\"/login\", { username, password }).then(response => response.data)\n    logout = () => this.service.post('/logout').then(response => response.data)\n    loggedin = () => this.service.get('/loggedin').then(response => response.data)\n\n}\n\nexport default authServices ","import React, { Component } from 'react'\n\n\n\nclass Signup extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: ''\n        }\n    }\n\n\n\n    render() {\n\n        return (\n            <h1>THIS IS HOME</h1>\n\n        )\n    }\n}\n\nexport default Signup","import React, { Component } from \"react\"\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\n\nimport AuthServices from \"../../../../services/auth.services\"\n\nclass Login extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: \"\",\n            password: \"\"\n        }\n        this.AuthServices = new AuthServices()\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    postUser = () => {\n        this.AuthServices.login(this.state)\n            .then(theLoggedUser => {\n                this.setState({ username: '', password: '' })\n                this.props.setTheUser(theLoggedUser)\n                this.props.history.push('/')\n            })\n            .catch(err => console.log(\"error en post user de login\", err))\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.postUser()\n    }\n\n\n    render() {\n        return (\n            <Container>\n\n                <h1>Log In</h1>\n\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Button variant=\"dark\" type=\"submit\">Log in</Button>\n                </Form>\n            </Container>\n\n        )\n    }\n\n\n\n}\n\nexport default Login","import React, { Component } from 'react'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\n\nimport AuthServices from '../../../../services/auth.services'\n\nclass Signup extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: ''\n        }\n        this.AuthServices = new AuthServices()\n    }\n\n\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    postUser = () => {\n\n        this.AuthServices.signup(this.state)\n\n            .then(theLoggedNewUser => {\n                this.setState({ username: '', password: '' })\n                this.props.setTheUser(theLoggedNewUser)\n                this.props.history.push('/')\n\n            })\n            .catch(err => console.log({ err }))\n    }\n\n    handleSubmit = e => {\n        console.log(this.state)\n\n        e.preventDefault()\n        this.postUser()\n    }\n\n    render() {\n\n        return (\n\n            <Container>\n\n                <h1>Signup!!</h1>\n\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    </Form.Group>\n\n                    <Button variant=\"dark\" type=\"submit\">Signup</Button>\n                </Form>\n            </Container>\n\n        )\n    }\n}\n\nexport default Signup","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/files`,\n            withCredentials: true   // RUTAS PERSISTENTES\n        })\n    }\n\n    handleUpload = theFile => this.service.post('/upload', theFile).then(response => response.data)\n}","import axios from \"axios\"\n\nclass authServices {\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/profile`,\n            withCredentials: true\n        })\n    }\n\n    getUser = (id) => this.service.get(`/${id}`).then(response => response.data)\n\n    postUser = user => this.service.post(\"/update\", user).then(response => response.data)\n\n    addMap = map => this.service.post(\"/addmap\", map).then(response => response.data)\n\n    addProject = (id) => this.service.post(\"/addproject\", { id }).then(response => response.data)\n\n\n    // login = ({ username, password }) => this.service.post(\"/login\", { username, password })\n    // logout = () => this.service.post('/logout').then(response => response.data)\n    // loggedin = () => this.service.get('/loggedin').then(response => response.data)\n\n}\n\nexport default authServices ","import React, { Component } from 'react'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport AuthServices from \"../../../services/auth.services\"\nimport FilesServices from \"../../../services/files.services\"\nimport UserServices from \"../../../services/user.services\"\n\n// import JobExperienceCard from \"./JobExperience\"\n\n\nclass ProfileEditForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.UserServices = new UserServices()\n        this.AuthServices = new AuthServices()\n        this.FilesServices = new FilesServices()\n\n        this.state = { user: this.props.loggedInUser }\n    }\n\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({ ...this.state, user: { ...this.state.user, [name]: value } })\n    }\n\n    finishAction = () => {\n        this.props.closeModal()\n    }\n\n    postUser = () => {\n        this.UserServices.postUser(this.state.user)\n            .then(() => this.finishAction())\n            .catch(err => console.log(err))\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.postUser()\n\n    }\n\n\n\n    handleFileUpload = e => {\n        const uploadData = new FormData()\n        uploadData.append(\"imageUrl\", e.target.files[0])\n        this.FilesServices.handleUpload(uploadData)\n            .then(response => {\n                console.log('Subida de archivo finalizada! La URL de Cloudinray es: ', response.secure_url)\n                this.setState({ ...this.state, imageUrl: response.secure_url })\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n\n        const { name, lastName, username, email, description, experienceOverview, company, role, startDate, endDate, jobDescription } = this.state.user\n\n\n        return (\n\n            <>\n\n                {this.state ?\n                    <Form id=\"profile-edit-form\" onSubmit={this.handleSubmit}>\n\n                        <Form.Group>\n                            <Form.Label>Image</Form.Label>\n                            <Form.Control type=\"file\" name=\"imageUrl\" onChange={this.handleFileUpload} />\n                        </Form.Group>\n\n\n                        <Form.Group>\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control type=\"text\" name=\"username\" value={username} onChange={this.handleChange} />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control type=\"text\" name=\"name\" value={name} onChange={this.handleChange} />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Last Name</Form.Label>\n                            <Form.Control type=\"text\" name=\"lastName\" value={lastName} onChange={this.handleChange} />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"text\" name=\"email\" value={email} onChange={this.handleChange} />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Short Description of yourself</Form.Label>\n                            <Form.Control type=\"text\" name=\"description\" value={description} onChange={this.handleChange} />\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>Work experience</Form.Label>\n\n                            <Form.Group>\n                                <Form.Label>Give us an overview of your background</Form.Label>\n                                <Form.Control type=\"text\" name=\"experienceOverview\" value={experienceOverview} onChange={this.handleChange} />\n                            </Form.Group>\n\n                            <Form.Text className=\"text-muted\">Company</Form.Text>\n                            <Form.Control type=\"text\" name=\"company\" value={company} onChange={this.handleChange} />\n                            <Form.Text className=\"text-muted\">Role</Form.Text>\n                            <Form.Control type=\"text\" name=\"role\" value={role} onChange={this.handleChange} />\n                            <Form.Text className=\"text-muted\">Start date</Form.Text>\n                            <Form.Control type=\"date\" name=\"startDate\" value={startDate} onChange={this.handleChange} />\n                            <Form.Text className=\"text-muted\">End date</Form.Text>\n                            <Form.Control type=\"date\" name=\"endDate\" value={endDate} onChange={this.handleChange} />\n                            <Form.Text className=\"text-muted\">Description</Form.Text>\n                            <Form.Control type=\"text\" name=\"jobDescription\" value={jobDescription} onChange={this.handleChange} />\n\n                            <hr />\n                        </Form.Group>\n\n\n\n\n                        <Button variant=\"dark\" type=\"submit\">Update profile</Button>\n                    </Form>\n                    :\n                    <h1>loading</h1>}\n\n            </>\n        )\n    }\n}\n\nexport default ProfileEditForm\n\n\n\n    // addExperience = () => {\n    //     let workExperienceCopy = [...this.state.workExperience]\n    //     let newWorkExperience = {\n    //         company: \"\",\n    //         role: \"\",\n    //         startDate: \"\",\n    //         endDate: \"\",\n    //         description: \"\"\n    //     }\n    //     workExperienceCopy.push(newWorkExperience)\n    //     this.setState({\n    //         workExperience: workExperienceCopy\n    //     })\n\n    // }\n\n\n\n\n\n\n\n// {\n//     this.state.workExperience.length > 0 && this.state.workExperience.map((elm, idx) =>\n\n        // <Form.Group>\n        //     <Form.Label>Work experience</Form.Label>\n        //     <Form.Text className=\"text-muted\">Company</Form.Text>\n        //     <Form.Control type=\"text\" name=\"company\" value={elm.company} onChange={this.handleChange} />\n        //     <Form.Text className=\"text-muted\">Role</Form.Text>\n        //     <Form.Control type=\"text\" name=\"role\" value={elm.role} onChange={this.handleChange} />\n        //     <Form.Text className=\"text-muted\">Start date</Form.Text>\n        //     <Form.Control type=\"date\" name=\"startDate\" value={elm.startDate} onChange={this.handleChange} />\n        //     <Form.Text className=\"text-muted\">End date</Form.Text>\n        //     <Form.Control type=\"date\" name=\"endDate\" value={elm.endDate} onChange={this.handleChange} />\n        //     <Form.Text className=\"text-muted\">Description</Form.Text>\n        //     <Form.Control type=\"text\" name=\"jobDescription\" value={elm.jobDescription} onChange={this.handleChange} />\n\n        //     <hr />\n        // </Form.Group>\n\n//     )\n// }\n\n// <Button variant=\"dark\" type=\"button\" onClick={this.addExperience}>Add a Job experience</Button>\n\n","\nimport React, { Component } from 'react'\n\nimport Card from 'react-bootstrap/Card'\nimport Col from 'react-bootstrap/Col'\n// import ListGroup from 'react-bootstrap/ListGroup'\n// import Row from 'react-bootstrap/Row'\n// import Modal from 'react-bootstrap/Modal'\n\n// import GoogleServices from \"../../../services/google.services\"\n\n\nclass ProfileSummary extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: {},\n\n        }\n    }\n\n\n    render() {\n\n\n        const { imageUrl, name, lastName, email, description, maps, projects, organizations } = this.props.userDetails\n\n        return (\n\n            <>\n\n                {this.props.userDetails ?\n\n                    <Col md={3}>\n\n                        <Card>\n                            <Card.Img variant=\"top\" src={imageUrl ? imageUrl : \"http://getdrawings.com/free-icon/user-icon-67.png\"} />\n                            <Card.Body>\n                                <Card.Title>{name ? name : \"\"} {lastName ? lastName : \"\"}</Card.Title>\n                                <Card.Text>\n                                    {description ? description : \"\"}\n                                </Card.Text>\n                            </Card.Body>\n                            <Card.Body>\n                                <Card.Title>Activity</Card.Title>\n                                <Card.Text>\n                                    maps: {maps ? maps.length : \"0\"} <br />\n                                    projects: {projects ? projects.length : \"0\"} <br />\n                                    organizations: {organizations ? organizations.length : \"0\"}\n                                </Card.Text>\n                            </Card.Body>\n                            <Card.Body>\n                                <Card.Title>Contact</Card.Title>\n                                <Card.Text>\n                                    {email}.\n    </Card.Text>\n                            </Card.Body>\n\n                        </Card>\n                    </Col>\n\n                    : <h6>loading</h6>}\n            </>\n\n        )\n    }\n}\n\nexport default ProfileSummary","\nimport React, { Component } from 'react'\n\n// import Card from 'react-bootstrap/Card'\n// import Col from 'react-bootstrap/Col'\n// import ListGroup from 'react-bootstrap/ListGroup'\n// // import Row from 'react-bootstrap/Row'\n// import Modal from 'react-bootstrap/Modal'\n\n// import GoogleServices from \"../../../services/google.services\"\n\n\nclass JobExperienceSection extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: {},\n\n        }\n    }\n\n    render() {\n\n        const { company, role, experienceOverview, startDate, endDate, jobDescription } = this.props.userDetails\n\n        return (\n\n            <>\n\n                {this.props.userDetails ?\n\n\n                    <article>\n                        <h3>Professional Overview</h3>\n                        <h6>{experienceOverview}</h6>\n\n                        <h3>Last Relevant Experience</h3>\n                        <h5>{role} at {company}</h5>\n                        <p>From {startDate} to {endDate} </p>\n                        <h5>{jobDescription}</h5>\n\n                    </article>\n\n\n                    : <h6>loading</h6>}\n            </>\n\n        )\n    }\n}\n\nexport default JobExperienceSection","import React from 'react'\n\n\n// onChange = () => console.log(\"LO CAMBIARON\")\n\nconst MapListItem = (props) => {\n\n\n    return (\n\n        <tr>\n            <td>{props.item.created_at}</td>\n            <td>{props.item.googleKWords}</td>\n            <td>{props.item.demografic}</td>\n\n            <td>\n                <form>\n                    <label>\n                        <select>\n\n                            <option value=\"1\" >1</option>\n                            <option value=\"2\" >2</option>\n                            <option value=\"3\" >3</option>\n                            <option value=\"4\" >4</option>\n                            <option value=\"5\" >5</option>\n                            <option value=\"6\" >6</option>\n                            <option value=\"7\" >7</option>\n\n                        </select>\n                    </label>\n\n                </form>\n\n\n\n            </td>\n\n\n\n        </tr>\n\n    )\n}\n\nexport default MapListItem","import axios from \"axios\"\n\nclass mapServices {\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/maps`,\n            withCredentials: true\n        })\n    }\n\n    postMap = (map) => this.service.post(\"/create\", map).then(response => response.data)\n\n    // getMap = mapId => this.service.post(\"/getmap\", mapId).then(response => response.data)\n\n    getMap = mapId => this.service.get(`/getmap/${mapId}`).then(response => response.data)\n\n    updateMap = (mapId, map) => this.service.post(`/getmap/${mapId}`, map).then(response => response.data)\n\n    addNotes = objectToUpdate => this.service.post(\"/addnote\", objectToUpdate).then(response => response.data)\n\n    // this.service.get(\"/getmap\", mapId).then(response => response.data)\n\n\n    // getUser = (id) => this.service.get(`/${id}`).then(response => response.data)\n\n\n    // login = ({ username, password }) => this.service.post(\"/login\", { username, password })\n    // logout = () => this.service.post('/logout').then(response => response.data)\n    // loggedin = () => this.service.get('/loggedin').then(response => response.data)\n\n}\n\nexport default mapServices","import React from 'react'\nimport MapListItem from \"./MapListItem\"\nimport Table from 'react-bootstrap/Table'\n\nimport { Link } from 'react-router-dom'\n\n\nimport UserServices from \"../../../services/user.services\"\nimport MapServices from \"../../../services/maps.services\"\n\n\n\n// const UserService = new UserServices()\nconst MapService = new MapServices()\n\nconst MapsTable = (props) => {\n\n\n    // props.userDetails.maps && console.log(mapList)\n    props.list && console.log(\"TODO, Meter los elementos en la lista\")\n\n\n    return (\n\n        props.list ?\n            <div>\n\n                <h2>Map list</h2>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Ceated</th>\n                            <th>Demografics</th>\n                            <th>keywords</th>\n                            <th>Add to Project</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {props.list.map((elm, idx) => <Link className=\"map-table-item\" to={`/maps/${elm._id}`}> <MapListItem key={idx} item={elm} /></Link>)}\n                    </tbody>\n                </Table>\n            </div>\n\n            : \"loading\"\n\n    )\n\n}\n\nexport default MapsTable","import React from 'react'\nimport MapListItem from \"./MapListItem\"\nimport Table from 'react-bootstrap/Table'\n\nimport { Link } from 'react-router-dom'\n\n\nimport UserServices from \"../../../services/user.services\"\nimport MapServices from \"../../../services/maps.services\"\n\n\n\n// const UserService = new UserServices()\nconst MapService = new MapServices()\n\nconst ProjectList = (props) => {\n\n    return (\n\n        props.list ?\n            <div>\n\n                <h2>Project list</h2>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Ceated</th>\n                            <th>Name</th>\n                            <th>Opportunity</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {props.list.map((elm, idx) => <Link className=\"project-table-item\" to={`/projects/${elm._id}`}> <MapListItem key={idx} item={elm} /></Link>)}\n                    </tbody>\n                </Table>\n            </div>\n\n            : \"loading\"\n\n    )\n\n}\n\nexport default ProjectList","import React, { Component } from 'react'\n\nimport Container from 'react-bootstrap/Container'\nimport Modal from 'react-bootstrap/Modal'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nimport ProfileEditForm from \"../../UI/Profile/ProfileEditForm\"\nimport UserSummary from \"../../UI/Profile/ProfileSummary\"\nimport JobExperienceSection from \"../../UI/Profile/JobExperienceSection\"\nimport MapList from \"../../UI/Profile/MapsList\"\nimport ProjectList from \"../../UI/Profile/ProjectList\"\n\nimport UserServices from \"../../../services/user.services\"\n\nclass Profile extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: {},\n            showModal: false,\n            showList: \"maps\"\n        }\n        this.UserServices = new UserServices()\n    }\n\n    componentDidMount = () => this.getUser()\n\n    getUser = () => {\n\n        this.UserServices.getUser(this.props.match.params.id)\n            .then(theUser => this.setState({ ...this.state, user: theUser }))\n            .catch(err => console.log(err))\n    }\n\n    showMaps = () => this.setState({ ...this.state, showList: \"maps\" })\n\n    showProjects = () => this.setState({ ...this.state, showList: \"projects\" })\n\n    closeModal = () => this.setState({ showModal: false })\n\n    openModal = () => this.setState({ showModal: true })\n\n\n    render() {\n\n        return (\n\n            <Container>\n                <Row className=\"align-items-left\">\n\n\n                    <UserSummary userDetails={this.state.user} />\n\n                    <Col md={9}>\n                        <h1>Hi {this.state.username}, Welcome to your profile</h1>\n                        <button onClick={this.openModal} >Edit profile</button>\n\n                        <JobExperienceSection userDetails={this.state.user} />\n\n                        <div className=\"profile-toggle-box\">\n                            <button onClick={this.showMaps}>Maps</button>\n\n                        </div>\n\n                        <div className=\"profile-toggle-box\">\n                            <button onClick={this.showProjects}>Projects</button>\n\n                        </div>\n\n                        {this.state.showList === \"maps\" ?\n                            <MapList list={this.state.user.maps} />\n                            :\n                            <ProjectList list={this.state.user.projects} />\n                        }\n\n                    </Col>\n\n\n                    <Modal show={this.state.showModal} onHide={this.closeModal}>\n                        <Modal.Body>\n                            <h3>Edit Your profile</h3>\n                            <hr></hr>\n                            <ProfileEditForm closeModal={this.closeModal} loggedInUser={this.props.loggedInUser} />\n                        </Modal.Body>\n                    </Modal>\n\n\n\n\n\n\n                    {/* {this.props.loggedInUser ? <ProfileEditForm closeModal={this.closeModal} loggedInUser={this.props.loggedInUser} /> : <h1>cargando</h1>} */}\n\n\n                </Row>\n\n            </Container>\n        )\n    }\n}\n\nexport default Profile","import React, { Component } from 'react'\n\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n\nimport AuthServices from '../../../services/auth.services'\n\nimport { Link } from 'react-router-dom'\n\nclass Navigation extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {}\n        this.AuthServices = new AuthServices()\n    }\n\n    logout = () => {\n        this.AuthServices.logout()\n            .then(response => {\n                this.props.setTheUser(false)\n            })\n            .catch(err => console.log(err))\n    }\n\n\n\n\n    render() {\n\n\n\n        const greeting = this.props.loggedInUser ? <>Hola, {this.props.loggedInUser.username}</> : <>Hola, invitad@</>\n\n\n        return (\n\n\n            this.props.loggedInUser ?\n                (\n                    <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\n                        <Navbar.Brand href=\"#home\">Insight dct</Navbar.Brand>\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                            <Nav className=\"ml-auto\">\n                                <Nav.Link as=\"div\"> <Link to=\"/\">Home</Link></Nav.Link>\n                                <Nav.Link as=\"div\"> <Link to={`/profile/${this.props.loggedInUser._id}`}>Profile</Link></Nav.Link>\n                                <Nav.Link as=\"div\"> <Link to=\"/maps/create\"> Create Map </Link></Nav.Link>\n                                <Nav.Link as=\"div\"> <Link to=\"/projects/create\"> Create Projects </Link></Nav.Link>\n\n                                <Nav.Link onClick={this.logout}>Logout</Nav.Link>\n                                <Nav.Link as=\"small\">{greeting}</Nav.Link>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Navbar>\n                )\n                :\n                (\n                    <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\n                        <Navbar.Brand href=\"#home\">Insight dct</Navbar.Brand>\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                            <Nav className=\"ml-auto\">\n                                <Nav.Link as=\"div\"> <Link to=\"/\">Home</Link></Nav.Link>\n                                <Nav.Link as=\"div\"> <Link to=\"/signup\">Signup</Link></Nav.Link>\n                                <Nav.Link as=\"div\"> <Link to=\"/login\">Login</Link></Nav.Link>\n                                <Nav.Link as=\"small\">{greeting}</Nav.Link>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Navbar>\n                )\n        )\n    }\n}\n\nexport default Navigation","\nimport React, { Component } from 'react'\n\nimport './Map.css'\n\nimport mapboxgl from 'mapbox-gl';\nimport data from \"./madridVectors.json\"\nimport demografics from \"./demografia.json\"\n\n\n// import Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\n// import Row from 'react-bootstrap/Row'\n// import Modal from 'react-bootstrap/Modal'\n\n\nimport UserServices from \"../../../services/user.services\"\n\nmapboxgl.accessToken = 'pk.eyJ1IjoicnViZW5jYWx6YWNvcnRhIiwiYSI6ImNrNmtubnJyaTA1dGozbGxrcDF4M3BpbjQifQ.MQlFgG0opOtC1mDZD5yPRA';\n\n\nclass Map extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            lng: this.props.state ? this.props.state.lng : -3.70,\n            lat: this.props.state ? this.props.state.lat : 40.4115,\n            zoom: this.props.state ? this.props.state.zoom : 11\n\n        }\n        this.UserServices = new UserServices()\n\n    }\n\n    // initialState = () => {\n    //     console.log(\"initializeState\")\n    //     console.log(this.props.state)\n    //     this.setState({\n    //         lng: this.props.state.lng,\n    //         lat: this.props.state.lat,\n    //         zoom: this.props.state.zoom,\n    //     })\n    // }\n\n\n\n    mergedata = () => {\n\n\n        for (let i = 0; i < data.features.length; i++) {\n            for (let y = 0; y < demografics.length; y++) {\n\n\n\n                if (data.features[i].properties.name == demografics[y].code) {\n                    data.features[i].properties = { ...data.features[i].properties, ...demografics[y] }\n                }\n\n\n\n            }\n\n        }\n\n        console.log(data)\n\n    }\n\n    sendFilters = () => this.props.postFilters(this.state)\n\n\n    componentDidMount() {\n\n        this.mergedata()\n\n        // this.props.state && this.initialState()\n\n        if (this.props.state) {\n            let map = new mapboxgl.Map({\n                container: this.mapContainer,\n                style: 'mapbox://styles/mapbox/streets-v11',\n                center: [this.props.state.lng, this.props.state.lat],\n                zoom: this.props.state.zoom\n            })\n\n            map.on('move', () => {\n                this.setState({\n                    ...this.state,\n                    lng: map.getCenter().lng.toFixed(4),\n                    lat: map.getCenter().lat.toFixed(4),\n                    zoom: map.getZoom().toFixed(2)\n\n                })\n\n                this.sendFilters()\n            })\n\n            map.on('load', () => {\n                map.addSource('madridVectors', {\n                    type: 'geojson',\n                    data\n                });\n\n                map.addLayer({\n                    id: 'madridVectors',\n                    type: 'line',\n                    source: 'madridVectors',\n                    paint: {\n                        'line-color': '#877b59',\n                        'line-width': 1\n                    }\n                }); // ID metches `mapbox/streets-v9`\n\n            });\n\n        } else {\n\n            let map = new mapboxgl.Map({\n                container: this.mapContainer,\n                style: 'mapbox://styles/mapbox/streets-v11',\n                center: [this.state.lng, this.state.lat],\n                zoom: this.state.zoom\n            })\n\n\n            map.on('move', () => {\n                this.setState({\n                    ...this.state,\n                    lng: map.getCenter().lng.toFixed(4),\n                    lat: map.getCenter().lat.toFixed(4),\n                    zoom: map.getZoom().toFixed(2)\n\n                })\n\n                this.sendFilters()\n            })\n\n            map.on('load', () => {\n                map.addSource('madridVectors', {\n                    type: 'geojson',\n                    data\n                });\n\n                map.addLayer({\n                    id: 'madridVectors',\n                    type: 'line',\n                    source: 'madridVectors',\n                    paint: {\n                        'line-color': '#877b59',\n                        'line-width': 1\n                    }\n                }); // ID metches `mapbox/streets-v9`\n\n            });\n\n\n\n        }\n\n\n\n\n    }\n\n\n    render() {\n\n\n        return (\n\n            <>\n                <Col md={6}>\n                    <div className=\"map-container\" ref={el => this.mapContainer = el}> </div>\n                </Col>\n            </>\n        )\n    }\n}\n\nexport default Map","import axios from 'axios'\n\nexport default class GoogleServices {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: 'https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/',\n            // RUTAS PERSISTENTES\n        })\n    }\n\n\n    // const endPoint = \"/json?location=40.415843,%20-3.703589&radius=1500&keyword=chino&key=AIzaSyA4kSlF_U7Jn2kZLB6bsUaLlnSqt7UJLL4\"\n\n    getPlaces = (keyword) => {\n\n        // keyword ? keyword = keyword.replace(\" \", \"20%\") : null\n\n        this.service.get(`nearbysearch/json?location=-33.8670522,151.1957362&radius=1500&keyword=cruise&key=AIzaSyA4kSlF_U7Jn2kZLB6bsUaLlnSqt7UJLL4`)\n            .then(response => {\n                console.log(\"RESPONSES\")\n                console.log(response)\n                console.log(response.data)\n            })\n            .catch(err => {\n                console.log(\"Errores\")\n                console.log(err)                     //Axios entire error message\n                console.log(err.response.data.error) //Google API error message \n            })\n    }\n\n}","\nimport React, { Component } from 'react'\n\n\n// import mapboxgl from 'mapbox-gl';\n\n// import Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\n// import Row from 'react-bootstrap/Row'\n// import Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport GoogleServices from \"../../../services/google.services\"\n\n\n\nclass MapFilterBar extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            demografic: \"\",\n            googleKWords: \"\",\n\n        }\n        this.GoogleServices = new GoogleServices()\n\n    }\n\n\n    componentDidMount = () => this.initialState()\n\n    initialState = () => {\n\n        this.props.state &&\n\n            this.setState({\n\n                demografic: this.props.state.demografic,\n                googleKWords: this.props.state.googleKWords,\n\n            })\n\n    }\n\n\n\n    getPlaces = (keywords) => {\n        console.log(\"llega a la barra\")\n        this.GoogleServices.getPlaces(keywords)\n    }\n\n    searchPlaces = () => this.getPlaces(this.state.googleKWords)\n\n    sendFilters = () => this.props.postFilters(this.state)\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({ ...this.state, [name]: value })\n        this.sendFilters()\n    }\n\n\n    render() {\n\n        return (\n\n            <>\n                <Col md={3}>\n                    <h1> Filters</h1>\n\n                    <Form id=\"profile-edit-form\">\n\n                        <Form.Group>\n                            <Form.Label>search</Form.Label>\n                            <Form.Control type=\"text\" name=\"googleKWords\" onChange={this.handleChange} placeholder=\"search for keywords\" />\n                        </Form.Group>\n\n                        <Button variant=\"dark\" type=\"button\" onClick={this.searchPlaces} >Search</Button>\n                    </Form>\n\n                </Col>\n            </>\n        )\n    }\n}\n\nexport default MapFilterBar","import axios from \"axios\"\n\nclass mapServices {\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/notes`,\n            withCredentials: true\n        })\n    }\n\n    postNote = note => this.service.post(\"/create\", note).then(response => response.data)\n\n    // getMap = mapId => this.service.post(\"/getmap\", mapId).then(response => response.data)\n\n    // this.service.get(\"/getmap\", mapId).then(response => response.data)\n\n\n    // getUser = (id) => this.service.get(`/${id}`).then(response => response.data)\n\n\n    // login = ({ username, password }) => this.service.post(\"/login\", { username, password })\n    // logout = () => this.service.post('/logout').then(response => response.data)\n    // loggedin = () => this.service.get('/loggedin').then(response => response.data)\n\n}\n\nexport default mapServices ","import React from 'react'\nimport Table from 'react-bootstrap/Table'\n\nimport { Link } from 'react-router-dom'\n\n\nconst SingleNote = (props) => {\n\n\n    // props.userDetails.maps && console.log(mapList)\n\n    return (\n\n        props ?\n\n            <article>\n\n                {/* <h6 className=\"note-creator\">{props.eachNote.creator}</h6> */}\n                <p className=\"note-text\">{props.eachNote.text}</p>\n                <hr />\n\n            </article>\n\n\n            : \"loading\"\n\n    )\n\n}\n\nexport default SingleNote","\nimport React, { Component } from 'react'\n\n\n// import mapboxgl from 'mapbox-gl';\n\n\n// import Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\n// import Row from 'react-bootstrap/Row'\n// import Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport GoogleServices from \"../../../services/google.services\"\nimport NotesServices from \"../../../services/notes.services\"\nimport MapsServices from \"../../../services/maps.services\"\n\nimport SingleNote from \"./SingleNote\"\n\n\n\nclass notesBar extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            creator: \"\",\n            text: \"\",\n\n        }\n        this.GoogleServices = new GoogleServices()\n        this.NotesServices = new NotesServices()\n        this.MapsServices = new MapsServices()\n\n    }\n\n    sendFilters = () => this.props.postFilters(this.state)  // REVISAR ESTO\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({ creator: this.props.loggedInUser._id, [name]: value })\n    }\n\n    handleSubmit = () => {\n\n        this.NotesServices.postNote(this.state)\n            .then(newNote => this.MapsServices.addNotes({ mapId: this.props.state._id, noteId: newNote._id }))\n            .then(updatedMap => this.props.postFilters(updatedMap))\n\n        this.resetNote()\n\n    }\n\n    resetNote = () => document.querySelector(\"#note-box\").value = \"\"\n\n\n    render() {\n\n        return (\n\n            <>\n                {this.props.state ?\n                    <Col md={3}>\n\n                        <h1> Notes</h1>\n\n                        <Form id=\"note-form\" onSubmit={this.handleSubmit}>\n\n                            <Form.Group>\n                                <Form.Label>Add Note</Form.Label>\n                                <Form.Control id=\"note-box\" type=\"text\" name=\"text\" onChange={this.handleChange} onClick={this.submitNote} placeholder=\"write a note\" required />\n                            </Form.Group>\n                            <Button variant=\"dark\" type=\"button\" onClick={this.handleSubmit}>Make note</Button>\n\n\n                            <div className=\"notes-container\">\n                                {this.props.state.notes.map((elm, idx) => <SingleNote key={idx} eachNote={elm} />)}\n                            </div>\n\n                        </Form>\n\n                    </Col>\n\n                    : \"Save the map for enabling comments.\"\n                }\n            </>\n        )\n    }\n}\n\nexport default notesBar","import React, { Component } from 'react'\n\nimport mapboxgl from 'mapbox-gl';\n\nimport Map from \"../../UI/maps/Map\"\nimport MapFilterBar from \"../../UI/FilterBar/FilterBar\"\nimport NotesBar from \"../../UI/Notes/NotesBar\"\n\n\nimport Container from 'react-bootstrap/Container'\n// import Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n// import Modal from 'react-bootstrap/Modal'\nimport { Link } from 'react-router-dom'\n\n\n\nimport UserServices from \"../../../services/user.services\"\nimport MapServices from \"../../../services/maps.services\"\n\nimport Button from 'react-bootstrap/Button';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoicnViZW5jYWx6YWNvcnRhIiwiYSI6ImNrNmtubnJyaTA1dGozbGxrcDF4M3BpbjQifQ.MQlFgG0opOtC1mDZD5yPRA';\n\n\nclass MapPage extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            creator: \"\",\n            demografic: \"\",\n            googleKWords: \"\",\n            lng: undefined,\n            lat: undefined,\n            zoom: undefined,\n            notes: []\n\n        }\n        this.UserServices = new UserServices()\n        this.MapServices = new MapServices()\n\n    }\n\n    // updateCreator = () => this.setState({ ...this.state, user: this.props.loggedInUser._id })\n\n    postFilters = (filters) => {\n        this.setState({ ...this.setState, ...filters, creator: this.props.loggedInUser._id })\n    }\n\n    postMap = () => {\n\n        this.MapServices.postMap(this.state)\n            .then(newMap => this.UserServices.addMap(newMap))\n            .then(addedMap => {\n\n                console.log(addedMap)\n                this.props.history.push(`/maps/${addedMap._id}`)\n            })\n\n    }\n\n\n\n    render() {\n\n        // this.props.loggedInUser._id ? this.setState({ ...this.setState, creator: this.props.loggedInUser._id }) : null\n\n\n        // console.log(this.props)\n        // console.log(\"this is the logged in id \", this.props.loggedInUser._id)\n        return (\n\n            <>\n                <Container>\n                    <Row>\n\n                        <MapFilterBar postFilters={this.postFilters} />\n\n                        <Map postFilters={this.postFilters} />\n\n                        <NotesBar loggedInUser={this.props.loggedInUser} />\n\n                    </Row>\n\n                    <Button variant=\"primary\" type=\"button\" onClick={this.postMap}>save map</Button>\n                </Container>\n            </>\n        )\n    }\n}\n\nexport default MapPage","import React, { Component } from 'react'\n\nimport mapboxgl from 'mapbox-gl';\n\nimport Map from \"../../UI/maps/Map\"\nimport MapFilterBar from \"../../UI/FilterBar/FilterBar\"\nimport NotesBar from \"../../UI/Notes/NotesBar\"\n\n\nimport Container from 'react-bootstrap/Container'\n// import Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n// import Modal from 'react-bootstrap/Modal'\n\n\nimport UserServices from \"../../../services/user.services\"\nimport MapServices from \"../../../services/maps.services\"\n\nimport Button from 'react-bootstrap/Button';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoicnViZW5jYWx6YWNvcnRhIiwiYSI6ImNrNmtubnJyaTA1dGozbGxrcDF4M3BpbjQifQ.MQlFgG0opOtC1mDZD5yPRA';\n\n\nclass MapPageId extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            creator: \"\",\n            demografic: \"\",\n            googleKWords: \"\",\n            lng: -3.70,\n            lat: 40.4115,\n            zoom: 11,\n            notes: [],\n\n\n        }\n        this.UserServices = new UserServices()\n        this.MapServices = new MapServices()\n\n    }\n\n\n\n    componentDidMount = () => this.getMap()\n\n\n    getMap = () => {\n\n        this.MapServices.getMap(this.props.match.params.id)\n            .then(theMap => {\n                this.setState({ ...theMap, creator: theMap.creator._id, updated: true })\n            })\n            .catch(err => console.log(\"error montando el estado\", err))\n    }\n\n\n    postFilters = (filters) => {\n        this.setState({ ...this.setState, ...filters, creator: this.props.loggedInUser._id })\n    }\n\n\n    updateMap = () => {\n\n        this.MapServices.updateMap(this.props.match.params.id, this.state)\n            .then(updatedMap => console.log(updatedMap))\n            .catch(err => console.log(\"error al hacer update al map\"))\n\n    }\n\n\n    render() {\n        return (\n\n            <>\n                <Container>\n                    <Row>\n\n                        <MapFilterBar postFilters={this.postFilters} state={this.state} />\n\n                        {this.state.updated ? <Map postFilters={this.postFilters} state={this.state} /> : null}\n\n                        <NotesBar loggedInUser={this.props.loggedInUser} postFilters={this.postFilters} state={this.state} />\n\n                    </Row>\n\n                    <Button variant=\"primary\" type=\"button\" onClick={this.updateMap}>save map</Button>\n                </Container>\n            </>\n        )\n    }\n}\n\nexport default MapPageId","import axios from \"axios\"\n\nclass ProjectServices {\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_URL}/projects`,\n            withCredentials: true\n        })\n    }\n\n    createProject = (project) => this.service.post(\"/create\", project).then(response => response.data)\n\n    getProject = (id) => this.service.get(`/${id}`).then(response => response.data)\n\n    addTeamMember = (projectId, memberId) => this.service.post(\"/addteammember\", { projectId, memberId }).then(response => response.data)\n\n    updateProject = project => this.service.post(\"/updatemain\", project).then(response => response.data)\n\n    // this.service.get(\"/getmap\", mapId).then(response => response.data)\n\n\n    // getUser = (id) => this.service.get(`/${id}`).then(response => response.data)\n\n\n    // login = ({ username, password }) => this.service.post(\"/login\", { username, password })\n    // logout = () => this.service.post('/logout').then(response => response.data)\n    // loggedin = () => this.service.get('/loggedin').then(response => response.data)\n\n}\n\nexport default ProjectServices","import React, { Component } from 'react'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\n\n\nimport UserServices from \"../../../services/user.services\"\nimport ProjectServices from \"../../../services/project.services\"\n\n\n// import JobExperienceCard from \"./JobExperience\"\n\n\nclass ProfileEditForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.UserServices = new UserServices()\n        this.ProjectServices = new ProjectServices()\n        this.state = {\n            project: {\n                name: \"\",\n                creator: this.props.loggedInUser._id\n            },\n            showModal: true\n        }\n    }\n\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({ ...this.state, project: { ...this.state.project, [name]: value } })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.createProject()\n    }\n\n    createProject = () => {\n\n        this.ProjectServices.createProject(this.state.project)\n            .then(project => {\n                console.log(\"adding the project\")\n                this.UserServices.addProject(project._id)\n                    .then(user => user)\n                    .then(user => this.ProjectServices.addTeamMember(project._id, user._id))\n                    .then(() => this.finishAction(project._id))\n\n            })\n            .catch(err => console.log(err))\n    }\n\n    finishAction = (id) => {\n        this.closeModal()\n        this.props.history.push(`/projects/${id}`)\n    }\n\n    closeModal = () => this.setState({ ...this.state, showModal: false })\n\n    render() {\n\n        return (\n            <>\n\n                {this.state ?\n\n                    <Modal show={this.state.showModal} onHide={this.closeModal}>\n                        <Modal.Body>\n                            <h3>Create a new project</h3>\n                            <hr></hr>\n                            <Form id=\"project-create-form\" onSubmit={this.handleSubmit}>\n\n                                <Form.Group>\n                                    <Form.Label>Project Name</Form.Label>\n                                    <Form.Control type=\"text\" name=\"name\" onChange={this.handleChange} required />\n                                </Form.Group>\n\n                                <Button variant=\"dark\" type=\"submit\">Create Project</Button>\n\n                            </Form>\n\n                        </Modal.Body>\n                    </Modal>\n\n                    :\n                    <h1>loading</h1>}\n\n            </>\n        )\n    }\n}\n\nexport default ProfileEditForm\n\n\n","import React, { Component } from 'react'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport AuthServices from \"../../../services/auth.services\"\nimport FilesServices from \"../../../services/files.services\"\nimport UserServices from \"../../../services/user.services\"\nimport ProjectServices from \"../../../services/project.services\"\n\n\nclass ProjectEditForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.UserServices = new UserServices()\n        this.AuthServices = new AuthServices()\n        this.FilesServices = new FilesServices()\n        this.ProjectServices = new ProjectServices()\n\n        this.state = { ...this.props.project }\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({ ...this.state, [name]: value })\n    }\n\n\n    updateProject = () => {\n        this.ProjectServices.updateProject(this.state)\n            .then(updatedProject => {\n                this.props.updateState(updatedProject)\n\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.updateProject()\n        this.finishAction()\n\n    }\n\n\n    finishAction = () => {\n        this.props.closeModal()\n    }\n\n\n    render() {\n\n        const { name, proposal, opportunity, } = this.state\n\n\n\n        return (\n\n            <>\n\n                {this.state ?\n                    <Form id=\"project-edit-form\" onSubmit={this.handleSubmit}>\n\n                        <Form.Group>\n                            <Form.Label>name</Form.Label>\n                            <Form.Control type=\"text\" name=\"name\" value={name} onChange={this.handleChange} />\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>Proposal</Form.Label>\n                            <Form.Control type=\"text\" name=\"proposal\" value={proposal} onChange={this.handleChange} />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Opportunity</Form.Label>\n                            <Form.Control type=\"text\" name=\"opportunity\" value={opportunity} onChange={this.handleChange} />\n                        </Form.Group>\n\n                        <Button variant=\"dark\" type=\"submit\">Update Project</Button>\n                        <Button variant=\"light\" type=\"button\">Cancel</Button>\n                    </Form>\n                    :\n                    <h1>loading</h1>}\n\n            </>\n        )\n    }\n}\n\nexport default ProjectEditForm\n\n\n\n","import React from 'react'\nimport Table from 'react-bootstrap/Table'\n\nimport { Link } from 'react-router-dom'\n\n\n// const UserService = new UserServices()\n\nconst ProjectInfoBox = (props) => {\n\n    // props.userDetails.maps && console.log(mapList)\n\n    return (\n\n        props ?\n            <div className=\"project-info-box\">\n                <article>\n\n                    <h2>{props.title}</h2>\n\n                    <p>{props.content}</p>\n\n                </article>\n            </div>\n\n            : \"loading\"\n\n    )\n\n}\n\nexport default ProjectInfoBox","\nimport React, { Component } from 'react'\n\nimport Card from 'react-bootstrap/Card'\nimport Col from 'react-bootstrap/Col'\n// import ListGroup from 'react-bootstrap/ListGroup'\n// import Row from 'react-bootstrap/Row'\n// import Modal from 'react-bootstrap/Modal'\n\n// import GoogleServices from \"../../../services/google.services\"\n\n\nclass ProfileSummary extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: {},\n\n        }\n    }\n\n\n    render() {\n\n\n        const { imageUrl, name, lastName, email, description, maps, projects, organizations } = this.props.userDetails\n\n        return (\n\n            <>\n\n                {this.props.userDetails ?\n\n                    <Col md={6}>\n\n                        <Card>\n                            <Card.Img variant=\"top\" src={imageUrl ? imageUrl : \"http://getdrawings.com/free-icon/user-icon-67.png\"} />\n                            <Card.Body>\n                                <Card.Title>{name ? name : \"\"} {lastName ? lastName : \"\"}</Card.Title>\n                                <Card.Text>\n                                    {description ? description : \"\"}\n                                </Card.Text>\n                            </Card.Body>\n\n                            <Card.Body>\n                                <Card.Title>Contact</Card.Title>\n                                <Card.Text>\n                                    {email}.\n    </Card.Text>\n                            </Card.Body>\n\n                        </Card>\n                    </Col>\n\n                    : <h6>loading</h6>}\n            </>\n\n        )\n    }\n}\n\nexport default ProfileSummary","import React, { Component } from 'react'\n\nimport Container from 'react-bootstrap/Container'\nimport Modal from 'react-bootstrap/Modal'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\n\nimport ProjectEditForm from \"../../UI/Projects/ProjectEditForm\"\nimport ProjectInfoBox from \"../../UI/Projects/ProjectInfoBox\"\nimport TeamBox from \"../../UI/Projects/TeamBox\"\nimport TeamMemberSummary from \"../../UI/Projects/TeamMemberSummary\"\n\nimport UserServices from \"../../../services/user.services\"\nimport ProjectServices from \"../../../services/project.services\"\n\n\nclass Project extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            project: {},\n            showModal: false,\n            showTeamModal: false\n        }\n        this.ProjectServices = new ProjectServices()\n    }\n\n    componentDidMount = () => this.getProject()\n\n\n    getProject = () => {\n        this.ProjectServices.getProject(this.props.match.params.id)\n            .then(theProject => this.setState({ ...this.state, project: theProject }))\n            .catch(err => console.log(err))\n    }\n\n\n    closeModal = () => this.setState({ showModal: false })\n\n    openModal = () => this.setState({ showModal: true })\n\n    // closeTeamModal = () => this.setState({ showModal: false })\n\n    // openTeamModal = () => this.setState({ showModal: true })\n\n    updateState = state => {\n        console.log(\"ser recibio el update state\")\n        this.setState({ ...this.state, project: { ...state } })\n    }\n\n    render() {\n\n        // console.log(this.state)\n        const { name, proposal, opportunity, team } = this.state.project\n\n        console.log(team)\n        return (\n\n            this.props ?\n\n                <Container>\n                    <h1> {name}</h1>\n                    <button onClick={this.openModal} >Edit project</button>\n\n                    <Col>\n                        <Row>\n                            <ProjectInfoBox title=\"Proposal\" content={proposal} />\n                        </Row>\n\n                        <Row>\n                            <ProjectInfoBox title=\"Opportunity\" content={opportunity} />\n                        </Row>\n\n                        <Row>\n\n                            <div className=\"project-team-box\">\n                                <h1>Team</h1>\n\n                                {/* {team ? <p>Existe</p> : \"loading\"} */}\n\n                                {team ? team.map((elm, idx) => <TeamMemberSummary key={idx} userDetails={elm} />) : \"loading\"}\n                            </div>\n                        </Row>\n\n\n\n                        <Modal show={this.state.showModal} onHide={this.closeTeamModal}>\n                            <Modal.Body>\n                                <h3>Edit your Project</h3>\n                                <hr></hr>\n                                <ProjectEditForm closeModal={this.closeModal} project={this.state.project} updateState={this.updateState} />\n                            </Modal.Body>\n                        </Modal>\n\n                    </Col>\n\n                </Container>\n                :\n                \"loading\"\n        )\n    }\n}\n\nexport default Project\n\n","import React, { Component } from 'react';\n\nimport { Switch, Route, Redirect } from 'react-router-dom'\n// , Redirect \n\n// import Vectors from \"./components/UI/maps/mergingFile\"\n\n\nimport AuthServices from \"./services/auth.services\"\n\nimport Home from \"./components/pages/Home/Home\"\nimport Login from \"./components/pages/auth/login/login\"\nimport Signup from \"./components/pages/auth/signup/signup\"\nimport Profile from \"./components/pages/Profile/Profile\"\nimport Navigation from \"./components/UI/NavBar/NavBar\"\nimport MapPage from \"./components/pages/Maps/MapPage\"\nimport MapPageId from \"./components/pages/Maps/MapPageId\"\nimport NewProjectForm from \"./components/UI/Projects/NewProjectForm\"\nimport Project from \"./components/pages/Projects/Project\"\n\n\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      loggedInUser: false\n    }\n    this.AuthServices = new AuthServices()\n  }\n\n  // componentDidUpdate = (prevProps, prevState) => console.log(\"El estado de App se ha actualizado:\", this.state)\n  componentDidMount = () => this.fetchUser()\n\n  //this allows for the session to stay logged\n  setTheUser = user => {\n    console.log(user)\n    this.setState({ loggedInUser: user })\n  }\n\n  fetchUser = () => {\n    this.AuthServices.loggedin()\n      .then(theUser => {\n        this.setState({ loggedInUser: theUser })\n      })\n      .catch(() => this.setState({ loggedInUser: false }))\n  }\n\n\n  render() {\n\n    return (\n      <>\n\n        <Navigation setTheUser={this.setTheUser} loggedInUser={this.state.loggedInUser} />\n\n        <Switch>\n          <Route exact path=\"/\" render={props => <Home {...props} />} />\n          <Route path=\"/login\" render={props => <Login setTheUser={this.setTheUser} {...props} />} />\n          <Route path=\"/signup\" render={props => <Signup setTheUser={this.setTheUser} {...props} />} />\n          <Route path=\"/profile/:id\" render={props => this.state.loggedInUser ? <Profile loggedInUser={this.state.loggedInUser} setTheUser={this.setTheUser} {...props} /> : <Redirect to=\"/login\"></Redirect>} />\n          <Route path=\"/maps/create\" render={props => <MapPage loggedInUser={this.state.loggedInUser} {...props} />} />\n          <Route path=\"/maps/:id\" render={props => <MapPageId loggedInUser={this.state.loggedInUser} {...props} />} />\n          <Route path=\"/projects/create\" render={props => this.state.loggedInUser ? <NewProjectForm loggedInUser={this.state.loggedInUser} {...props} /> : <Redirect to=\"/login\"></Redirect>} />\n          <Route path=\"/projects/:id\" render={props => this.state.loggedInUser ? <Project loggedInUser={this.state.loggedInUser} {...props} /> : <Redirect to=\"/login\"></Redirect>} />\n\n\n\n\n          {/* <Route path=\"/project/create\" render={props => <MapPagexId loggedInUser={this.state.loggedInUser} {...props} />} /> */}\n          {/* <Route path=\"/maps/create\" render={props => this.state.loggedInUser ? <Map loggedInUser={this.state.loggedInUser} setTheUser={this.setTheUser} {...props} /> : <Redirect to=\"/login\"></Redirect>} /> */}\n        </Switch>\n      </>\n    )\n  }\n\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { BrowserRouter as Router } from 'react-router-dom'\n\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n    , document.getElementById('root')\n);\n\n"],"sourceRoot":""}